name: "godot-ci export"
on:
  push:
    branches:
      - '**'
    tags:
      - 'v**'

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: bretagne
  EXPORT_DIR: export
  PROJECT_PATH: .

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: false
          fetch-depth: 0
      
      - run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Pull LFS
        env:
          LFS_PAT: ${{ secrets.LFS_PAT }}
        working-directory: ${{ github.workspace }}
        timeout-minutes: 2
        run: |
          echo $(pwd)
          # https://github.com/actions/checkout/issues/415#issuecomment-2143700018
          git lfs install --skip-repo
          # Configure Git to use the LFS_PAT for authentication
          git config --local http.https://lfs.bent.party/.extraheader "Authorization: Bearer $LFS_PAT"
          # Pull LFS objects
          git lfs pull
      
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  create-release:
    name: Create Release
    needs: export-windows
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    steps:
      - name: Create Release and Upload Build
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automated release for tag ${{ github.ref_name }}.
          artifacts: build/windows/$EXPORT_NAME.exe
