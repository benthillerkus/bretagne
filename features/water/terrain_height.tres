[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://0o54jb530fpr"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4jk8f"]
output_port_for_preview = 0
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_3rckf"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_q06c8"]
size = Vector2(500, 240)
expression = "output = input > 0.0 ? 1.0 : 0.0;"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_w6wu5"]
expanded_output_ports = [0]
input_name = "vertex"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_never, cull_back, diffuse_lambert, specular_disabled, unshaded, world_vertex_coords, fog_disabled;




void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;


// Output:0
	COLOR.rgb = n_out2p0;


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p2 = n_out2p0.g;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		n_out4p0 = n_out2p2 > 0.0 ? 1.0 : 0.0;
	}


// VectorCompose:3
	float n_in3p0 = 0.00000;
	float n_in3p2 = 0.00000;
	vec3 n_out3p0 = vec3(n_in3p0, n_out4p0, n_in3p2);


// Output:0
	ALBEDO = n_out3p0;


}
"
modes/depth_draw = 2
modes/specular = 2
flags/unshaded = true
flags/world_vertex_coords = true
flags/fog_disabled = true
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_w6wu5")
nodes/vertex/2/position = Vector2(-80, 320)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 6)
nodes/fragment/0/position = Vector2(460, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_4jk8f")
nodes/fragment/2/position = Vector2(-640, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorCompose_3rckf")
nodes/fragment/3/position = Vector2(240, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_q06c8")
nodes/fragment/4/position = Vector2(-320, 200)
nodes/fragment/4/size = Vector2(500, 240)
nodes/fragment/4/input_ports = "0,0,input;"
nodes/fragment/4/output_ports = "0,0,output;"
nodes/fragment/4/expression = "output = input > 0.0 ? 1.0 : 0.0;"
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 2, 2, 4, 0, 4, 0, 3, 1)
