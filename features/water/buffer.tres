[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://clbm7rrysn2lo"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_7u1g5"]
parameter_name = "Texture2DParameter"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pw8si"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_frw3m"]
input_name = "uv"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Texture2DParameter;



void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, n_out4p0);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_7u1g5")
nodes/fragment/2/position = Vector2(-320, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_pw8si")
nodes/fragment/3/position = Vector2(100, 80)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_frw3m")
nodes/fragment/4/position = Vector2(-320, 20)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 4, 0, 3, 0, 3, 0, 0, 0)
